 rotating event timeline
 <!-- <div className="timeline-container">
                <h2>Event Schedule</h2>
                <div className="rotating-disc">
                    <div className="disc-content">
                        <div className="time-item" style={{ "--rotation": "0deg" }}>
                            <strong>10:00 AM - Opening Ceremony</strong>
                            <p>Kick off the event with a welcome speech and introduction.</p>
                        </div>
                        <div className="time-item" style={{ "--rotation": "51.43deg" }}>
                            <strong>11:00 AM - Keynote Speaker</strong>
                            <p>Hear from an industry expert about the latest trends in technology.</p>
                        </div>
                        <div className="time-item" style={{ "--rotation": "102.86deg" }}>
                            <strong>1:00 PM - Lunch Break</strong>
                            <p>Enjoy a variety of food options and network with other participants.</p>
                        </div>
                        <div className="time-item" style={{ "--rotation": "154.29deg" }}>
                            <strong>2:00 PM - Coding Workshops</strong>
                            <p>Participate in hands-on workshops to learn new skills and techniques.</p>
                        </div>
                        <div className="time-item" style={{ "--rotation": "205.72deg" }}>
                            <strong>5:00 PM - Hackathon Begins</strong>
                            <p>Form teams and start working on your projects.</p>
                        </div>
                        <div className="time-item" style={{ "--rotation": "257.15deg" }}>
                            <strong>8:00 PM - Dinner Break</strong>
                            <p>Take a break and enjoy a delicious dinner.</p>
                        </div>
                        <div className="time-item" style={{ "--rotation": "308.58deg" }}>
                            <strong>9:00 PM - Continue Hacking</strong>
                            <p>Work through the night to complete your projects.</p>
                        </div>
                    </div>
                </div>
            </div></> -->


            const express = require('express');
const bcrypt = require('bcrypt');
const jwt = require('jsonwebtoken');
// ... other imports (database connection, etc.)

const app = express();
app.use(express.json());

app.post('/api/auth/login', async (req, res) => {
  try {
    const { email, password } = req.body;
    // 1. Find user by email in the database
    const user = await findUserByEmail(email); // Replace with your database query
    if (!user) {
      return res.status(401).json({ success: false, message: 'Invalid credentials' });
    }
    // 2. Compare passwords
    const passwordMatch = await bcrypt.compare(password, user.password);
    if (!passwordMatch) {
      return res.status(401).json({ success: false, message: 'Invalid credentials' });
    }
    // 3. Generate JWT
    const token = jwt.sign({ userId: user.id }, 'your_secret_key', { expiresIn: '1h' }); // Replace 'your_secret_key'
    // 4. Send response
    res.json({ success: true, token });
  } catch (error) {
    console.error('Login error:', error);
    res.status(500).json({ success: false, message: 'Server error' });
  }
});

// ... database functions and other routes

app.listen(5000, () => {
  console.log('Server started on port 5000');
});